/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain) */
html, body, div, span, applet, object, iframe,
p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline; }

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  vertical-align: baseline;
  background: transparent;
  font-weight: normal; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

a {
  color: inherit;
  text-decoration: none; }

* {
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent; }

a, input, button, textarea {
  outline: none;
  resize: none; }

nav-bar {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: 70px;
  background-color: #EEEEEE;
  border-right: 1px solid #CCCCCC; }
  nav-bar .account-options, nav-bar .nav-link {
    position: relative;
    display: block;
    height: 50px;
    text-align: center;
    margin: 10px 0; }
    nav-bar .account-options.active path, nav-bar .account-options > a:hover path, nav-bar .nav-link.active path, nav-bar .nav-link > a:hover path {
      fill: #007AFF; }
    nav-bar .account-options > a, nav-bar .nav-link > a {
      display: inline-block;
      cursor: pointer; }
      nav-bar .account-options > a svg, nav-bar .nav-link > a svg {
        height: 50px;
        width: 50px; }
        nav-bar .account-options > a svg path, nav-bar .nav-link > a svg path {
          -webkit-transition: all 200ms linear;
          -khtml-transition: all 200ms linear;
          -moz-transition: all 200ms linear;
          -ms-transition: all 200ms linear;
          -o-transition: all 200ms linear;
          transition: all 200ms linear;
          fill: #CCCCCC; }
  nav-bar .account-options {
    height: 40px;
    border-bottom: 1px solid #CCCCCC;
    margin: 0; }
    nav-bar .account-options > a svg {
      height: 40px;
      width: 40px; }

.clients-section {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
  background-color: white; }
  .clients-section .search-clients-section, .clients-section .client-details-section {
    position: relative;
    float: left;
    width: 50%;
    height: 100%; }
  .clients-section .search-clients-section {
    border-right: 1px solid #CCCCCC; }
  .clients-section .search-clients-header {
    position: relative;
    display: block;
    width: 100%;
    height: 40px;
    background-color: #EEEEEE; }
    .clients-section .search-clients-header .label.right {
      line-height: 40px;
      font-size: 0.9em;
      position: absolute;
      top: 0;
      right: 20px;
      color: #007AFF;
      cursor: pointer; }
    .clients-section .search-clients-header > .title {
      display: block;
      padding: 0 40px;
      margin: 0;
      line-height: 40px;
      text-align: center;
      font-size: 1em;
      color: #333333;
      font-weight: normal; }
    .clients-section .search-clients-header > .icon.left {
      position: absolute;
      top: 5px;
      left: 0;
      cursor: pointer; }
    .clients-section .search-clients-header > .icon.right {
      position: absolute;
      top: 5px;
      right: 0;
      cursor: pointer; }
  .clients-section .clients-search {
    width: 100%;
    position: relative;
    display: block;
    background-color: #CCCCCC;
    height: 45px; }
    .clients-section .clients-search .field-container {
      position: absolute;
      top: 7px;
      left: 7px;
      bottom: 7px;
      right: 7px;
      display: block;
      background: white;
      border: 1px solid white;
      -webkit-border-radius: 5px;
      -khtml-border-radius: 5px;
      -moz-border-radius: 5px;
      -ms-border-radius: 5px;
      -o-border-radius: 5px;
      border-radius: 5px; }
      .clients-section .clients-search .field-container.is-focus .placeholder {
        left: 0; }
        .clients-section .clients-search .field-container.is-focus .placeholder .icon svg path {
          fill: #007AFF; }
      .clients-section .clients-search .field-container .placeholder {
        width: 100px;
        font-size: 0.8em;
        top: 0;
        bottom: 0;
        color: #AAAAAA;
        display: inline-block;
        position: absolute;
        left: calc(50% - 50px);
        text-align: center;
        -webkit-transition: left 200ms linear;
        -khtml-transition: left 200ms linear;
        -moz-transition: left 200ms linear;
        -ms-transition: left 200ms linear;
        -o-transition: left 200ms linear;
        transition: left 200ms linear; }
        .clients-section .clients-search .field-container .placeholder:after {
          content: "";
          display: table;
          clear: both; }
        .clients-section .clients-search .field-container .placeholder.hidden .text {
          opacity: 0; }
        .clients-section .clients-search .field-container .placeholder .text {
          opacity: 1;
          -webkit-transition: opacity 100ms linear;
          -khtml-transition: opacity 100ms linear;
          -moz-transition: opacity 100ms linear;
          -ms-transition: opacity 100ms linear;
          -o-transition: opacity 100ms linear;
          transition: opacity 100ms linear;
          float: left;
          line-height: 28px; }
        .clients-section .clients-search .field-container .placeholder .icon {
          float: left;
          height: 28px; }
          .clients-section .clients-search .field-container .placeholder .icon svg {
            display: inline-block;
            height: 28px;
            padding: 7px; }
            .clients-section .clients-search .field-container .placeholder .icon svg path {
              fill: #AAAAAA; }
      .clients-section .clients-search .field-container .delete-icon {
        position: absolute;
        top: 0;
        right: 0;
        cursor: pointer; }
        .clients-section .clients-search .field-container .delete-icon svg {
          padding: 7px; }
          .clients-section .clients-search .field-container .delete-icon svg path {
            fill: #AAAAAA; }
      .clients-section .clients-search .field-container input {
        width: 100%;
        height: 100%;
        background: transparent;
        border: none;
        text-indent: 26px;
        padding-right: 40px; }
  .clients-section .clients-list {
    max-height: calc(100vh - 85px);
    overflow-y: scroll;
    background-color: white; }
    .clients-section .clients-list .client {
      position: relative;
      padding: 10px 0;
      border-top: 1px solid #EEEEEE;
      color: #AAAAAA;
      cursor: pointer;
      height: 50px;
      -webkit-transition: background-color 150ms linear;
      -khtml-transition: background-color 150ms linear;
      -moz-transition: background-color 150ms linear;
      -ms-transition: background-color 150ms linear;
      -o-transition: background-color 150ms linear;
      transition: background-color 150ms linear; }
      .clients-section .clients-list .client:hover, .clients-section .clients-list .client.is-selected {
        background: #EEEEEE;
        -webkit-transition: background-color 150ms linear;
        -khtml-transition: background-color 150ms linear;
        -moz-transition: background-color 150ms linear;
        -ms-transition: background-color 150ms linear;
        -o-transition: background-color 150ms linear;
        transition: background-color 150ms linear; }
      .clients-section .clients-list .client .name {
        font-size: 0.9em;
        line-height: 30px;
        margin: 0;
        text-indent: 10px;
        padding-right: 30px; }
      .clients-section .clients-list .client .icon, .clients-section .clients-list .client button, .clients-section .clients-list .client svg {
        position: absolute;
        top: 10px;
        right: 0; }
        .clients-section .clients-list .client .icon.red path, .clients-section .clients-list .client .icon.red polygon, .clients-section .clients-list .client button.red path, .clients-section .clients-list .client button.red polygon, .clients-section .clients-list .client svg.red path, .clients-section .clients-list .client svg.red polygon {
          fill: red; }
      .clients-section .clients-list .client .delete-btn {
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        width: 100px;
        background-color: red;
        border: none;
        color: white;
        opacity: 1;
        -webkit-transition: opacity 200ms linear;
        -khtml-transition: opacity 200ms linear;
        -moz-transition: opacity 200ms linear;
        -ms-transition: opacity 200ms linear;
        -o-transition: opacity 200ms linear;
        transition: opacity 200ms linear; }
        .clients-section .clients-list .client .delete-btn.is-hidden {
          display: none;
          opacity: 0; }
      .clients-section .clients-list .client:first-child {
        border-top: none; }
  .clients-section .input .is-focus svg path {
    fill: #007AFF; }
  .clients-section .input .is-readonly input {
    color: #AAAAAA; }
  .clients-section .input svg-icons {
    position: absolute;
    height: 40px; }
    .clients-section .input svg-icons svg {
      padding: 12px;
      height: 40px; }
      .clients-section .input svg-icons svg path {
        fill: #AAAAAA;
        -webkit-transition: fill 200ms linear;
        -khtml-transition: fill 200ms linear;
        -moz-transition: fill 200ms linear;
        -ms-transition: fill 200ms linear;
        -o-transition: fill 200ms linear;
        transition: fill 200ms linear; }
  .clients-section .input input {
    width: 100%;
    height: 40px;
    background: transparent;
    border: none;
    border-bottom: 1px solid #EEEEEE;
    text-indent: 40px; }

.login-form {
  width: 50%;
  margin: 20% auto; }

body, html {
  font-family: "PT Sans", "Helvetica Neue Thin", "Helvetica Neue Light", "HelveticaNeue-Light", "Helvetica Neue", Calibri, Helvetica, Arial, sans-serif !important; }

body {
  margin: 0; }

svg {
  position: relative;
  display: block;
  height: 30px;
  padding: 5px; }
  svg path, svg polygon {
    fill: #007AFF; }
  svg.logo {
    height: 200px;
    width: 200px;
    margin: 20% auto; }
    svg.logo path, svg.logo polygon {
      fill: black; }

input-field {
  display: block; }
  input-field .is-focus svg path {
    fill: #007AFF; }
  input-field .is-readonly input {
    color: #AAAAAA; }
  input-field svg-icons {
    position: absolute;
    height: 40px; }
    input-field svg-icons svg {
      padding: 12px;
      height: 40px; }
      input-field svg-icons svg path {
        fill: #AAAAAA;
        -webkit-transition: fill 200ms linear;
        -khtml-transition: fill 200ms linear;
        -moz-transition: fill 200ms linear;
        -ms-transition: fill 200ms linear;
        -o-transition: fill 200ms linear;
        transition: fill 200ms linear; }
  input-field input {
    width: 100%;
    height: 40px;
    background: transparent;
    border: none;
    border-bottom: 1px solid #EEEEEE;
    text-indent: 40px; }

svg-icons {
  display: inline-block; }

.splash {
  position: relative;
  display: block; }

.page-host {
  position: absolute;
  left: 70px;
  right: 0;
  top: 0;
  bottom: 0;
  overflow-x: hidden;
  overflow-y: auto;
  background-color: white; }

@media print {
  .page-host {
    position: absolute;
    left: 10px;
    right: 0;
    top: 50px;
    bottom: 0;
    overflow-y: inherit;
    overflow-x: inherit; } }

/*# sourceMappingURL=data:application/json;base64, */
